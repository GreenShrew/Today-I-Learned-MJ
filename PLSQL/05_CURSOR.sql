-- CURSOR
-- 주로 프로시져 내부의 SQL 명령중 SELECT 명령의 결과가 다수의 행으로 얻어졌을 때 사용하는,
-- 결과를 저장하는 메모리 영역을 지칭한다.

SET SERVEROUTPUT ON;

-- 예시1
declare
    vs_job_id varchar2(30);
begin
    select job_id into vs_job_id from employees where department_id = 30;
    DBMS_OUTPUT.PUT_LINE(vs_job_id);
end;    -- 부서번호가 30인 부서에는 여러 사원이 있는데, 
-- 여러 사원의 결과(job_id)를 하나의 변수 vs_job_id에 넣으려고 하니 에러가 발생한다.


-- 위의 익명블럭은 select 명령의 결과가 1행(row)이므로 실행이 가능하지만, select 명령의 결과가 2행 이상이라면
-- 에러가 발생한다. 2행 이상의 결과를 담을 수 있는 메모리영역(또는 변수)으로 사용하는 것이 CURSOR이며,
-- 자바의 리스트와 비슷한 구조를 갖고 있다.
-- 또는 반복실행문을 이용하여 그 값들을 참조하고 출력하고 리턴할 수 있다.




-- CURSOR의 실행단계
-- 1. CURSOR의 생성 (정의)
------------------------------------------------------------
-- CURSOR 사용할 커서의 이름[ (매개변수1, 매개변수2, ...) ]
-- IS
-- SELECT ....SQL 문장
------------------------------------------------------------
-- 매개변수의 역할 : select 명령에서 사용할 값들(주로 where 절에서 사용할 값들)
-- select ....SQL 문장 : CURSOR에 사용되어 결과를 안겨줄 SQL 명령


-- 2. CURSOR 의 OPEN  (호출)
------------------------------------------------------------
-- OPEN 커서이름[ (전달인수1, 전달인수2, ...) ]
------------------------------------------------------------
-- 실제로 전달인수를 전달하여 커서를 실행하고 결과를 저장


-- 3. 결과를 반복 실행문과 함께 필요에 맞게 처리
------------------------------------------------------------
-- LOOP
--      FETCH 커서이름 INTO 변수;
--      EXIT WHEN 커서이름%NOTFOUND;
--      필요에 맞는 처리 실행
-- END LOOP;
------------------------------------------------------------
-- FETCH 커서이름 INTO 변수;  커서에 담긴 데이터들 중 한줄씩 꺼내서 변수에 넣는 동작이다.
-- EXIT WHEN 커서이름%NOTFOUND;     꺼냈는데 데이터가 없으면 종료한다.
-- LOOP 안에서 필요에 맞는 처리를 데이터가 없을때 까지 반복한다.

-- 4. CURSOR 닫기
------------------------------------------------------------
-- close 커서명
------------------------------------------------------------
















