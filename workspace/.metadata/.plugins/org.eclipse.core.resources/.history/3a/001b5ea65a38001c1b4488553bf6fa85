package days09;

public class Array11 {

	public static void main(String[] args) {
		// 2차원 배열
		// 행과 열의 개념을 사용하는 인덱스가 2개인 배열
		// 2차원 배열의 변수 선언 - 행과 열을 의미하는 [] 가 두개 사용됨
		int [][] arr;
		// 2차원 배열의 공간 생성
		// 변수명 = new 자료형[행의 수][열의 수];
		//3행 2열의 2차원 배열 생성
		// (2개의 요소를 가지는 일차원 배열 3개 생성 - 3행 2열의 배열)
		arr = new int [3][2];
		// int [][] arr = new int [3][2]; 이와 같이 한번에 작성도 가능하다
		// 1차원 배열과 마찬가지로 2차원도 HEAP 메모리에 생성되므로 초기화 값은 0이다.
		// 참조변수 a에 저장된 주소로 가보면 arr[0]~arr[2]라는 5개의 주소가 저장되어있다
		// 각각 arr[0]~arr[2]에 저장된 주소로 가보면 HEAP 영역에 실제 데이터가 저장되어있다.
		
		int []a1 = {1,2,3,4,5};
		for(int k : a1) {
			System.out.print(k+" ");
		}
		// for 문과 배열의 이름을 이용한 배열의 접근
		// 위와 같이 for 명령 안에 배열의 요소 중 하나를 저장할 수 있는 변수를 선언하고, 콜론 (:)과 함계 1차원 배열의 이름을 쓰면
		// 배열의 요소 하나를 변수에 넣고 반복실행 1회가 배열의 요소 갯수만큼 실행된다.
		
		System.out.println();
		int [][] b = {{1,2},{3,4},{5,6}};	// 참고로 배열 {3,4}의 이름은 b[1]
		// int [][] b = new int[3][2]; 와 같다. 값이 모두 0으로 초기화
		for (int k : b[1]) {	// 3, 4가 저장되어 2회 반복실행한다.
			System.out.printf(k + " ");
		}
		
		// 위 두개의 배열 선언은 각 구성요소 값들은 다르지만, 행열의 갯수는 같다.
		// 이차원 배열의 구조
		// b[0] : {1,2}	b[1] : {3,4}	b[2] : {5,6}
		// b[0][0]:1	b[0][1]:2
		// b[1][0]:3	b[1][1]:4
		// b[2][0]:5	b[2][1]:6
		
		// 2차원 배열의 요소 접근 - 2개의 인덱스를 사용
		// 변수명[행의 인덱스 - 0부터 시작][열의 인덱스 - 0부터 시작] = 값;
		// arr 2차원 배열의 3번째 행의 두번째 요소에 10을 입력
		arr[2][1]=10;
		// 세번째 행의 두번째 값 출력
		System.out.println(arr[2][1]);
		
		// 2차원 배열의 배열을 생성함녀서 초기화하는 방법
		// 초기화 값을 설정하는 방법
		// { { 1번째 행의 초기화 값}, {2번째 행의 초기화 값}...}
		// 2행 3열의 2차원 배열을 생성하면서
		// 1번째 행의 요소 값을 1,2,3 으로, 2번째 행의 요소값을 4,5,6으로 지정
		int [][] arr3 = new int[][] {{1,2,3},{4,5,6}};
		// 2행 3열 2차원 배열
		System.out.println(arr3[0][2]);
		System.out.println(arr[1][1]);
		int [][]arr4 = {{1,2},{4,5},{7,8}};	// 3행 2열 2차원 배열
		System.out.println(arr4[0][1]);
		System.out.println(arr4[1][1]);
		
		// 2차원 배열 생성 후 2중 반복 실행문에 의한 값저장 & 출력
		int[][] a = new int[5][5];
		
		int k = 1;
		for(int i=0;i<=4;i++) {
			for(int j=0;j<=4;j++) {
				a[i][j] = k++;
//				a[i][j] = 100;	모든 자리에 100 넣기
			}
		}
		for(int i=0;i<=4;i++) {
			for(int j=0;j<=4;j++) {
				System.out.printf("%d\t",a[i][j]);
			}
			System.out.println();
	}

}
