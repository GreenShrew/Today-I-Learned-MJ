package days19;
// 예외(Exception) 처리
// 에러 (Error) : 잘못된 것, 에러가 존재하는 경우 실행될 수 없음 -> 아예 빨간줄이 그어져있는 경우
// 예외(Exception) : 잘못된 것, 특정 상황 또는 조건이 만족되는 경우 프로그램이 종료되는 형상
// 예외는 다양한 상황에 대해서 발생하는 현상으로 모든 예외를 대처할 수 없다.
// 다만, 예외가 발생한 경우 프로그램이 종료되지 않고 저장과 같은 기능을 제공할 수 있어야 한다.
// (예외가 발생해도 프로그램이 강제종료되지 않고 사용자에게 선택권 또는 처리기회를 주는것을 말한다.)
// 예외처리 : 예외가 발생한 경우 프로그램이 강제 종료되지 않도록 방지하는 것이다.

// ex) 100을 0으로 나눌 경우? 프로그램이 종료된다!
// 이러한 에러를 예상하고 이를 프로그램이 멈추는 대신 넘기거나 다른 작업을 시키는것이 예외처리!
public class Exception01 {

	public static void main(String[] args) {
		for(int i=1;i<=10;i++) {	// 만약 k가 0이라면 100/0이 되어 프로그램이 멈춘다!
			int k = (int)(Math.random()*10);	// 0~9의 정수가 나온다.
			try {	// 예외처리를 하는 방법
				int result = 100/k;
				System.out.println(result);
			}catch(Exception e) {
				System.out.println("0으로 나눴습니다.");
			}
			// 에러가 발생하면 catch 구문 안의 명령을 대신 실행하고 프로그램 실행을 계속한다.
			// 관건은 try와 catch의 중괄호 { }에 무엇을 넣어야 하는가? catch의 소괄호 ( )에는 또 무엇이 들어갈 수 있을까? 이다.
		}
	}

}
