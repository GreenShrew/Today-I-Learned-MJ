days12 배운것들

주의 - 같은 패키지 내에서는 같은 이름의 class 생성이 불가하다!

Class03

- 멤버 메소드
- main에서 Class의 멤버 변수에 값을 입력하고 멤버변수, 멤버메소드를 이용하여 출력하는 방법.


Class04

- 멤버메소드를 이용하여 성적표를 출력하는 예시
- private


Class05

- private 설명
정보은닉
- private를 이용한 예시


Class06 (Class05랑 묶어)

- Class05에 여러 기능을 추가한 예시
비밀번호를 설정하거나 잔액이 없으면 출금 불가능, -금액이면 입금 불가능과 같은 기능들

(참고) void에서의 return이란

Class 설계만 잘 해두면 main에서 매우 편리해진다.

- 접근지정자
https://studymake.tistory.com/424 참고


Class07

- 멤버 메소드를 작성하면 이런건 기본적으로 있어야해! 같은 느낌이 메소드들

일단 손으로 다 써봤다.

- getter와 setter의 자동생성 방법
 누르면 내가 만들어둔 변수에 대한 getter setter 생성 가능


Class08

- 생성자

뭔 소리야 이게..


Class09(Class08과 묶어)

- 역시 생성자 이야기

1. 이름이 똑같다
2. 안 보이지만 생성된다.
3. 따로 정의하면 동작을 취할 수 있다?


Class10(Class08,09와 묶어)

- 생성자의 매개변수를 활용하는 경우
생성자도 메소드이므로 오버로딩이 가능하다!


Class11

- 간단한 문제 풀이 1

코드블럭을 보고 이 코드가 실행이 가능하도록 Dclass의 생성자들을 만들어보자.


Class12(생성자를 오버로딩)

- 간단한 문제 풀이2

다음조건을 만족하는 구구단 출력 프로그램을 제작


Class13

- 멤버 메소드의 오버로딩
멤버 메소드도 오버로딩이 가능하다.


Class14

- this란 왜 쓰는가?

이 때만 쓰이는게 아니다.


Class15

- this 변수
- this의 용도

1. 


변수 인스턴스 생성과 멤버메소드 차이?