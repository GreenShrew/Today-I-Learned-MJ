day 18


FormatterClass03
DecimalFormat의 사용 방법

day 17 마지막에 하던건데 더 배울 내용이 많아서 18로 땡겨왔다.

- 단위별 구분패턴(천 단위마다 쉼표찍기)
- #을 이용한 구분패턴
- #을 이용한 소수점 표시 등등..

※ 참고로 사용한 변수 number에 저장되는 숫자의 원본은 DecimalFormat으로 양식을 바꾸어도 보존된다!


 다시 상속으로 돌아온다.
Extends10_Abstract01
https://limkydev.tistory.com/188 (추상클래스란 무엇이며, 왜 사용하며, 어떻게 쓰는가)

- 추상클래스
 상속의 문제점인 '강제성의 부재'를 해결하기 위해
강제성의 부재란?


Extends10_Abstract02

- 추상 메소드를 포함한 클래스
- 추상 메소드
- 추상 메소드의 작성 & 상속 방법

추상 클래스는 객체생성 불가

추상 클래스 내의 추상 메소드는 '반드시' 오버라이딩을 해야한다! <- 이것이 강제성!

추상 클래스도 상속 관계가 적용된다!


Extends10_Abstract03

- 추상 클래스의 단점
- 단점의 해결방법


Extends11_Interface01

- 상속의 단점 : extends로는 하나만 상속 받을 수 있어서 상속이 자식 - 부모 - 할아버지 이런 식으로 받아야한다.
- 인터페이스는 이런 단점을 해결하고 다중 상속을 위해 만들어진 방법.

- 인터페이스의 특징
- 인터페이스 생성 & 상속 방법


Extends11_Interface02

- 인터페이스 규칙


Extends11_Interface03 (여기 다시 봐야해)

- 실제로 다중 상속을 해보았다.
인터페이스들간의 상속
상속한 뒤 부모 클래스의 래퍼런스가 사용할 수 있는 메소드들을 비교

맨 아래 정리


Extends11_Interface04 (평가 출제 예정)

- 예제 (추상 클래스, 인터페이스 활용 예제)
- 스타 같이 유닛들의 상태 등을 만들것이다.



(collection은 코드블럭으로 처리할것과 아닌것을 골라낼 필요가 있다.)
-아래 collection의 클래스들
- 필요한 특성(검색이 필요한가, 데이터의 저장 및 삭제가 잦은가 등등)에 따라 필요한 클래스를 사용할 수 있다.

Collection01

- 컬렉션 클래스
- 컬렉션 클래스들 1~5 (이건 Collection01에 정리했다고 써)
- Vector,ArrayList


Collection02

- 컬렉션 클래스의 저장방식

- 컬렉션 프레임워크에서의 제네릭의 사용 < >  이거 말하는거임


Collection03

- LinkedList 클래스란, 특징, 장단점


Collection04

- HashSet 클래스란, 특징
- 특징을 이용해서 로또 추첨기 제작


