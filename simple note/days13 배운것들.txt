어제 배웠던 class01~15의 복습을 좀 했다.


복습한 부분은 그냥 코드블럭에 소스만 올려야할듯

Class001 (Day 12의 클래스 복습) - 코드블럭에 소스만

클래스의 장점 1. 무언가에 대한 변수가 필요할 때, 그 변수들을 일일히 선언하지 않아도 된다!

- 클래스의 정의
- 클래스 만드는 방법
- 멤버변수


Class002 - 코드블럭에 소스만

클래스의 장점 2. 클래스의 멤버메소드를 이용하여 반복 사용되는 코드를 일일히 코딩할 필요가 없다!

- 멤버메소드 복습


Class003 - 이건 정리해서 올려

- this 복습

- this를 꼭 사용해야 하는 경우!
새로운 객체의 생성 및 복사를 해야하는 경우.
멤버메소드 내에서 각 객체의 멤버변수를 호출하는 경우(Class05 풀이를 보면 c1.real - c2.real을 메소드로 만들기 위해 this.real-매개변수.real로 만들었다.)

this : 메소드의 호출객체의 참조값이 저장되는 참조변수. (중요)


Class004 - 코드블럭에 소스만

- getter, setter 복습


Class005

- 간단한 문제 풀이 1

 다음 코드블럭을 참고하여 init() 메소드로 값을 넣고, prn() 메소드를 호출하면 복소수의 형태인 'x+yi'로 값을 출력하도록 만들어보자.
 그리고 add(), substract 메소드를 제작하여 두 복소수의 덧셈, 뺄셈을 출력하도록 만들어보자.


Class006 - 코드블럭에 소스만

- 생성자 복습
생성자 오버로딩


Class007

- 간단한 문제 풀이 2

다음 코드블럭을 참고하여 아래의 조건을 만족하는 생성자를 만들어보자.


Class16 - 진도 시작

- this의 용도 #2


Class17 - this를 사용하는 방법 문제

- 간단한 문제 풀이 3

다음 코드블럭을 참고하여 아래의 조건을 만족하는 생성자를 만들어보자.


Class18 - 진도 / 블로그에는 내일 쓰자../ 못 쓴 부분 있다! 카페 가서 소스 받아서 쓰자!

- Static이란?

이걸 알기 위해서 이해하면 좋을것 : 자바 프로그램의 구동 과정
JVM에 대하여 검색해보자!
