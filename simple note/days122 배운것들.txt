days122 배운것들

 오늘은 프로젝트 발표를 하였다. 그리고 앞으로 Node.js와 Node.js의 FrameWork인 Express에 대하여 배운다.

 이번 시간을 통해 자바스크립트로 사이트를 구축하게 된다.

-> 훗날 면접때 Node.js 써봤냐는 질문 받으면 써봤다는 대답 할 정도까지는 만들 것...



※ 확인해야 할 파일
01_basic의 01파일 주석 잘 썼나 확인좀...







nodejs란?
==========================================

웹 브라우저를 이용하지 않고 자바스크립트를 이용할때 이를 번역해주는 번역기같은 역할을 한다!
쉽게 말하면 '실행기'라고 생각하면 된다.
자세한건 인터넷 검색...



Nodejs 설치(홈페이지 사진 찍어가면서 정리하는게 좋다)
==========================================

※ 주의!
=> 설치 경로상에 한글이 있다면 문제가 생긴다! 계정 이름이 한글이여도 문제가 생긴다!

우선 Node.js를 설치하는 방법에 대해 알아본다.

- https://nodejs.org/ 접속
-> 최신 버전이 아니라 추천하는 버전(Recommended For Most Users) 다운로드
--> 다운로드 받은 msi 파일을 실행한다.
---> ※ 쭉쭉 next 누르다가 중간에 Tools for Native Modules에서 나오는 체크박스 꼭 클릭!
(Automatically install the necessary tools. Note ......)
----> 처음 설치할 경우 시간이 좀 걸린다

-----> cmd 창이 나오는데, 이건 아까 Tools for Native Modules 체크박스를 눌러 필요 파일을 받겠다고 해서 이를 받는 작업이다.


------> 설치 되었는지 확인하는 방법!
 cmd에서 node -v 명령을 했을 때 설치한 nodejs의 버전이 출력되면 설치가 완료된것이다!

--------> cmd에 아래 명령을 한다.
npm install -g npm
이는 nodejs의 npm을 최신화 하는 명령이라고 한다. npm이란게 무엇인지는 인터넷 검색

----------> npm -v 명령으로 npm 버전을 확인할 수 있다!


몇가지 셋팅
=====================================

file - preference - Extensions - Live Server Config 에서 custom Browser를 chrome으로 바꾼다.
그럼 라이브서버 실행시 크롬으로 실행된다.

-> 만약 Live Server Config 메뉴가 보이지 않는다면 라이브 서버가 설치 안 된것이다.
좌측 어플리케이션 다운로드 아이콘 눌러서 live server를 검색하여 다운로드 하면 된다.



학습 시작! (실행시켜가면서 사진 찍자...)
=====================================

Visual Studio Code를 사용할 것이다.


NodeJS 폴더를 만든다.
# 기존에 내가 배워왔던 방식! 웹 브라우저를 이용하여 자바스크립트를 출력한다.

00_js 폴더를 만들고 01_JavaScript.html을 만든다.
-> document.write는 웹에 출력된다.
-> console.log는 개발자모드에서 console에 출력된다.
--> live server를 실행하면 웹 페이지가 오픈되며 위 내용이 출력된다!
---> 여기까지가 지금까지 사용했던 웹을 이용한 사용 방식이다




node.js를 실행하는 방법
=======================================
- 이번에는 웹 브라우저를 이용하지 않고 자바스크립트를 출력할 수 있도록 만들 것이다.

02_JavaScript.js 파일 생성
-> 문자열이 담긴 변수 a를 생성하고 console.log(a); 를 작성한다.
--> menu 에서 view - Terminal 선택시 하단에 콘솔처럼 TERMINAL 창이 나온다.
---> 우측의 + 표시 옆 아래버튼을 눌러 Command Prompt를 선택한다.

----> cd 00_js 명령으로 00_js폴더로 진입한다.

-----> node 02_JavaScript.js 라는 명령을 쓰면 해당 js 파일에 작성한 코드가 실행되어 나온다!

※ 앞으로 node.js의 실행은 이렇게 시킬 것이다!




변수선언 (01_Basic 폴더 생성)
※ 하단 Terminal에서 cd .. 등의 명령을 이용하여 01_Basic 폴더로 이동한다.
========================================
- 변수를 선언하는 방법에 대하여 알아본다.

01_VAR_CONST_LET.js 파일 생성

- 옛날 자바스크립트에서는 var 를 이용해 변수를 선언하였으나, 어느 이후부터는 const, let을 이용하여 변수선언을 많이 하게 되었다.


§ 상수형 변수 const : 변수의 생성과 함께 반드시 초기값이 있어야 하며, 이후 저장된 값의 변경이 불가능하다.
 마치 java의 final 변수와 같다.


※ 에러 발생시 Terminal에 에러 위치와 TypeError로 원인을 나타낸다.


§ var과 const의 차이점

var 변수는 영역 ({ }, 지역변수)과 상관 없이 값이 접근이 가능하다.
다만 함수의 시작과 끝을 구분짓는 중괄호 ({ , }) 는 영향을 받아서 함수를 벗어나면 변수로 인식되지 않는다.

const 변수는 블록 영역에 영향을 받아 접근이 구분된다.


- const 변수는...
-> 상수형 변수라고 부른다.
-> 한번 할당된 값은 변경할 수 없다.
-> 상수 선언 초기화가 없어도 에러가 발생한다.



§ let 변수
- 값을 변경할 수 있는 변수를 사용하려면, 앞에서 사용한 var 변수나, 서버프로그래밍에서 주로 사용하는 let 변수를 사용한다.
- var과 let 변수의 차이는 다소 많지는 않으며, 명백히 다른 점이 있지만 현재 사용상 구분할 일이 그렇기 많지는 않다.




§ const, let, var 의 차이점
※ 자바스크립트의 변수 생성은 선언, 할당(초기값 대입), 사용 의 단계로 구분된다.

- const와 let은 그 사용 영역이 구분되어 사용해야 하지만, var는 그 구분이 비교적 자유롭다.

- const와 let 변수는 반드시 선언 후 사용해야 하며, var은 선언없이 사용할 수 있다. 따라서 선언과 할당없이 사용된 변수는 모두 var 변수이다. (선언과 할당 없이 사용된 var 변수의 최초 값은 undefined 이다.)



§ const, let, var의 상세 설명 (이걸 먼저 쓰고 var, let과의 차이점 쓰는것도 좋아 보인다.)
-> 주석 확인


§ 변수 선언과 선언 키워드 별 사용의 방향
-> 주석 확인























































