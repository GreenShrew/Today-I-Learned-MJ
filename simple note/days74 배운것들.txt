day 74


§ 오늘 배운것

오늘은 Sp07 프로젝트를 이용하여 Spring Container 연습을 했다.

Spring Container란 무엇인가?
Bean이란 무엇인가?
왜 이것들이 필요한가?




========================= Sp07 계속

- DB에 실제로 데이터를 넣고 빼고 삭제하는 역할은 Dao에서 진행한다.
-> 의존주입에 의해 DataBaseManager클래스에서 정보를 받아서 연결
--> DataBaseManager에서도 의존주입에 의해서 DataBaseUserinfo 클래스에서 연결정보를 받는다.



시작!

- resource 파일에 appCtx.xml 파일을 만든다.
-> beans 태그에 몇가지 요소가 추가되었다.
--> DataBaseUserinfo 클래스가 bean으로 들어간다. 그리고 property 태그로 초기값을 설정한다.

--> DataBaseUserinfo는 DataBaseManager 클래스에 주입된다
--> DataBaseManager 클래스도 bean에 넣는다.
--> constructor-arg 태그로 생성자에 방금 만든 dbuserinfo(만든 bean의 이름) 데이터를 넣는다.

--> DataBaseManager는 또 WordDao 클래스에 주입된다
--> WordDao 클래스도 bean에 넣는다.
--> constructor-arg 태그로 생성자에 방금 만든 dbmanager(만든 bean의 이름) 데이터를 넣는다.

--> WordDao는 또 WordInsertService 클래스에 주입된다
--> 따라서 WordInsertService 클래스도 bean에 넣는다.
--> constructor-arg 태그로 생성자에 방금 만든 worddao(만든 bean의 이름) 데이터를 넣는다.

--> 이제 ctx로 insertService를 꺼내다 쓰면 된다!




§ 같은 방식으로 글자를 찾아주는 서비스인 WordSearchService 클래스를 만든다.

-> 이 역시 생성자에 WordDao 클래스의 의존주입 받고있다.
--> 따라서 appCtx.xml 파일에 bean을 만든다.




※ 여기까지가 이전에 했던 Sp06 프로젝트까지의 내용이다.
아무것도 의존주입받지 않는 클래스는 property로 초기값을 넣고, 의존 받는 클래스는 주입을 한다.





annotation 을 이용한 bean 자동주입!
==================================================


§ 이번에는 생성자에 자동주입을 시켜주는 constructor-arg 태그를 쓰지 않는다!
 이 경우 주입을 받는 클래스의 생성자 또한 지워야한다!
-> 생성자가 없는데 생성자에 데이터를 주입한다? 에러가 나온다.

--> 그럼 어떻게 Spring Container에 있는 property 태그 안의 DB 데이터는 어떻게 가져오는가?


☆ 자동주입 ☆ -> DataBaseManager.java 에 주석으로 작은 설명이 있다.
 appCtx.xml의 beans 태그의 xsi:schemaLocation 속성에 http://www.springframework.org/schema/context, http://www.springframework.org/schema/context/spring-context.xsd 를 추가한다.
-> 그리고 <context:annotation-config/> 태그를 추가한다.

--> DataBaseManager.java 클래스에서 생성자를 주석처리하고 위에 @Autowired를 쓴다. 그리고 import!
---> 그럼 해당 클래스의 bean을 스프링 컨테이너에서 검색하여, 꺼내다가 자동주입을 진행한다.

☆ 이를 '자동주입'이라고 부른다!





====== 이제 이를 사용해보자!
- com.ezen.word 패키지에 MainClass 클래스를 생성한다.

레코드 삽입 동작
-> 배열을 작성하고, 이를 wordset 테이블에 넣는 insert 동작을 시킨다. 그리고 이를 주석처리한다.

레코드 검색 동작
--> insert된 레코드를 검색해서 해당하는 정보를 출력한다.



★ 여기까지가 annotation 을 이용한 bean 자동주입 방법이였다.








Spring을 이용한 Web 만들기
================================
 이제부터는 Spring을 이용하여 Web 페이지를 만들것이다!

- TIL 폴더에 springweb 폴더를 만든다. 그리고 이클립스 workspace를 springweb 폴더로 옮긴다.

-> 다만, 이번에는 이클립스 버전을 좀 낮출것이다. 왜냐하면 예전에 사용된 '레거시 스프링?' 을 사용하면서 문제가 생긴다. 따라서 이클립스를 삭제하고 2020년 이클립스를 재설치할 예정이다.

--> 이전에 사용했던 프로젝트의 workspace를 보호하기 위해 이클립스를 삭제하기 전에 workspace를 바꾸었다.


☆ 삭제 순서

c드라이브 - 사용자 - 사용자이름(Onion) - .eclipse, .m2, .p2, eclipse, eclipse-workspace 폴더를 지운다! 다만, 이중에 하나는 없을 수는 있어도 eclipse 폴더가 없을수는 없다! 아마 다른데에 설치되어있을 확률이 높다.



☆ 다운로드 순서

https://www.eclipse.org/ 접속 - download 버튼 클릭 - 나오는 페이지에서 Download Packages 버튼 클릭 - MORE DOWNLOADS 항목에서 Older Versions 클릭 - 2020-03 클릭 - R Packages 클릭 - Windows x86_64 다운로드


eclipse-inst-win64.exe 실행 - Eclipse IDE for Enterprise Java and Web Developers - install 클릭














