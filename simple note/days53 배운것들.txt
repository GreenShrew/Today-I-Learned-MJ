day 53


EL, JSTL
※ 기존에 배운 JSP 문법을 사용하면서 생기는 번거로움을 간단히 해결하기 위해 만들어진 문법들이다. JSP 문법을 HTML5에서 좀더 구분하기 쉽고, 오류를 줄이고자 개발되었다.

※ jstl에서 태그를 <c:~~> 로 하는 이유는 
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
prefix="c" 로 선언했기 때문이다.


05 폴더 생성



01_EL

- 표현 언어(EL, Expression Language) : 편의성을 제공하는 문법!

'전달'보다는 '간단한 연산'과 연산의 결과를 화면에 '출력'에 초점을 두었다.
다만, 반복문 등은 제공하지 않는다.


JSP 문법 사용 : <%="Hello" %><br>
EL 문법 사용 : ${"Hello"}<br>

단순히 보면 간단해진것같지 않지만, 나중에 쓰다보면 상당히 많은 부분에서 단순화 시켜준다!


- EL로 표현 가능한것들

#1 자료형들

#2 산술연산
※ '백슬러쉬'${ 10-2 }는 모양 그대로 출력, ${ 10-2 }는 계산된 결과 출력한다.

#3 관계 연산(비교 연산)

#4 서로 다른 자료형간의 연산

#5 문자열 연결(이어붙이기)
※ 단순히 " " + " " 을 사용하면 에러가 발생한다. 왜냐하면 ${"5" + "2"}의 기능이 이미 있기 때문이다. 큰따옴표 안의 아라비아 숫자 기호를 숫자로 인식해서 더하는 기능!
따라서 문자열을 이어붙이기 위해서는 " " += " " 이런식으로 구성해야한다.

#6 서버 객체의 내용을 getAttribute 메소드 없이 사용
※ JSP 문법을 이용하면 request.getAttribute("name") 이 ${name}으로 줄어든다!
※ key값이 겹친다면 출력 우선순위가 높은 내용이 출력된다.
순서는 pageContext - request - session - application




02_ParameterNull

- 

http://localhost:8090/WEB07_JSP_SERVLET/05/02_ParameterNull.jsp?id=scott

JSP에서는 이렇게 submit을 통해 Parameter로 날아온 데이터를 받기 위해서는 request.getParameter("id");를 사용했었다.

EL에서는 Parameter로 날아오는 데이터를 받기 위해서는 ${param.id}와 같이 써서 parameter로 날아왔음을 알려주어야한다.


※ 중요!!!
만약 parameter가 비어있다면
JSP는 null값을 가지고, EL은 아예 값이 비어버린다.

그렇기 때문에, JSP는 그냥 .equals()로 연산을 하면 에러가 나온다.
따라서 에러를 방지하기 위해 복잡한 방법을 사용한다

EL은 그런거 없이 아주 간단하게 비교할 수 있다.

※ equals()를 사용할때 null값 비교 오류 해결방법
if(request.getParameter("id")!=null){
	if(request.getParameter("id").equals("hong")){

	}
}

※ <pre>태그 : 입력한 그대로를 화면에 보여주라는 태그 : 주로 코딩 내역을 화면에 표시할때 사용한다.




03_JSTL

※ 상단에 쓰게 될 
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
이 태그는 복붙해서 넣어도 좋지만, 어지간하면 외울 수 있도록 한다.
그만큼 많이 쓰인다는 의미

※ 사용하기 위해서는 별도의 라이브러리가 필요하다.
WEB-INF/lib에 별도의 jar 파일을 넣는다.

https://tomcat.apache.org/taglibs/standard/ 접속
-> version - Standard 1.1의 다운로드 클릭
-> binaries/jakarta-taglibs-standard-1.1.2.zip 파일 다운로드
-> 압축을 풀고 jakarta-taglibs-standard-1.1.2\lib 안에 있는 두개의 jar 파일을 WEB-INF/lib에 넣는다.

※ 또한, <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>를 상단에 추가하여야 한다.
prefix="c" : JSTL 문법을 사용하기 위해서 태그의 첫 글자를 c 를 사용하겠습니다~ 라는 표시이다.
그리고 c: 로시작하는 "태그"는 jstl 문법이 적용된다.

예를 들어, <c:태그이름> </c:태그이름> 이런식으로 이용한다.



- 편의성을 제공하는 문법!
EL에는 없는 JSP 기능의 대부분이 JSTL에서 제공이 된다. 변수, 반복문, if 등등..


- JSTL이 제공하는 기능들
※ 특이하게도, <jstl 태그 /> 이런식으로 닫으면 단일 태그로 사용이 가능하다. <jstl 태그></jstl 태그> 이런식도 가능하다.

#1 단순 출력

#2 변수 생성 및 초기화 1

#3 변수 생성 및 초기화 2

#4 객체 생성
※ EL을 이용하여 멤버변수 이름만으로 setter 기능을 대체하는 방법도 있다.
단, 클래스에 각 멤버변수에 대한 getter와 setter가 존재해야 위의 실행이 가능하다.

#5 그외 변수와 출력 기능 - jstl과 el의 혼합 사용



※ 참고로 EL은 JSP의 어디에서나 튀어나온다!
<input type="text" value="${member.userid}"> 이와 같이 값에 들어가거나 할 수 있다.
또는 04_JSTL_IF에서처럼 조건식에서도 쓰인다.




04_JSTL_IF

- jstl의 if 기능
 EL에는 없는 기능이다.

<c:if test="${true 혹은 false가 나오는 연산식}">
  내용~~~~
</c:if>

여러 parameter가 들어온다면 여러개의 if가 실행될 수 있다.




05_when

- if ~ else if ~ else

<c:choose> ~~~ </c:choose>
이게 한 세트
choose 태그 안에서 단 하나만 실행이 된다!


