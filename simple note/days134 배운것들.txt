days134 배운것들 영상 있음

오늘은 어제에 이어 정규표현식에 대한 학습을 진행한다.






03_LookAround.js
======================================================
새로운 파일 03_LookAround.js 를 만든다.
- 전후방위 탐색!
-> 무언가를 찾고 이를 제거하거나 뽑아내거나 하는 방법!



# 정방탐색

# 후방위탐색


-> 여러 예시들




04_Replace.js
===================================================
패턴을 찾고, 찾은 내용을 다른 내용을 바꿔주는 방법!




정규표현식은 여기까지
※ 참고로 정규표현식은 자바스크립트 이외에도 다른 언어에서도 제공된다. 하지만 다른 프로그래밍 언어에서는 또 달리 함수를 사용해야 한다!
-> 하지만, 정규표현식 언어는 똑같다!
--> 마치 SQL문이 오라클이던 mysql이던 똑같이 사용할 수 있는것처럼 사용이 가능하다!








Kotlin
=======================================
코틀린을 조금 배울 것이다.
-> 이것을 쓸땐 IntelliJ 라는 idea를 사용한다.
--> 다만 무료버번 사용!
※ 코틀린만은 위한 idea는 아니다!


※ 설치
- 구글에 intellij download 검색
- https://www.jetbrains.com/ko-kr/idea/download/#section=windows
- Community 버전 을 다운로드 한다.
- 다운로드된 exe 파일 실행
- 중간에 나오는 체크박스 여러개 있는 화면에서 전부 체크하고 설치



-> Today-I-Learned 폴더에 intelliworkspace 폴더 생성
-> 그리고 설치한 IntelliJ IDEA를 실행
-> New Project 선택
-> HelloWorld 라는 이름으로 새 프로젝트 생성 (위치는 intelliworkspace, 언어는 Kotlin, build system은 IntelliJ로 선택한다.)
-> Add sample code 체크박스 선택
※ 참고로 sample code는 src - main -kotlin - Main.kt 이다.


--> file 탭의 setting에서 폰트라던가 색상이라던가를 바꿀 수 있다.
--> 색상은 editor의 color Scheme 에서 언어별 색상을 바꿀 수 있다!
--> Kotlin을 쓸 것이기 때문에 이걸 건드린다.



※ 시작
src-test 폴더 아래에 HelloWorld.kt 파일을 만든다.
-> Hello World 문장을 출력하도록 함수를 제작한다.
--> 그리고 상단의 Run 메뉴에서 run을 선택시 실행된다.

---> 하단의 Run 항목에 실행시킨 파일의 이름으로 실행 결과가 뜬다!
※ 참고로 실행시 해당 파일의 모든 내용을 실행시킬수도 있지만, class 하나를 선택해서 실행시킬 수 있다!
또한, 한번 실행된 내용은 우상단의 녹색 재생 버튼으로 다시 실행하면 수정된 내용이 실행된다.



- days01 패키지를 만든다
-> 그 아래에 Ch01_Print_Comment 를 만든다. Kotlin Class이며, File을 선택한다.


# 주석 쓰는 방법

# print, println

# 세미콜론 유무 여부




※ 내가 작성한 코틀린 언어를 자바로 번역해보자!
- Tools 메뉴 Kotlin - Show Kotlin Bytecode 를 눌러본다.
-> 그럼 우측에 bytecode로 작성된 kotlin 내용이 나오고, 위에 Decompile을 누르면, 자바로 번역된 내용이 보이게 된다!





02_Variable.kt
=============================================
코틀린의 변수형에 대해서 알아본다.

# 리터럴

# 복수형 String

# 변수와 자료형

# 변수 선언방법

# 변수 선언시 var, val 차이
-> 값을 변경할 수 있는지 없는지의 차이





03_Function.kt
=============================================
코틀린에서 함수(메서드) 만들기

# 함수를 만드는 방법들
-> 리턴값 유무, 매개변수 값 유무

# 함수의 오버로딩

# 함수 안의 함수 정의



