days101 배운것들

※ 시작하기 전에
문서의 처음에 SET SERVEROUTPUT ON 를 한번 실행시켜주어야 스크립트 출력이 가능하다!



02_PLSQL제어문
==================================
- 새로운 sql 파일을 만든다.
-> 경로는 C:\Users\Onion\Desktop\TIL\Today-I-Learned-MJ\PLSQL
-> 이름은 02_PLSQL제어문

--> 여기서 제어문은 if문, 반복실행문을 말한다.



## if문
- if, if~else, if~else if~else 의 사용 방법.
-> 중괄호가 없고 조건과 명령문을 구분하기 위해 'then' 으로 구분한다.
--> 마무리는 end if 로 끝낸다.

---> 아래 간단한 예시와 문제가 있다.

※ 몇가지 사용 함수
- DBMS_RANDOM.VALUE(시작숫자, 끝숫자) : 시작 숫자부터 끝 숫자 사이의 임의 숫자를 발생한다.
- ROUND( 숫자, 반올림자리수 ) : 숫자를 지정된 반올림 자리에서 반올림한다.


## 중첩 IF 문
-- if문을 중첩하여 사용하는 방법이다.



## CASE 문
- CASE WHEN ~ THEN
-> 사이의 ~ 에 조건을 넣는다.

- CASE에는 유형이 두가지가 있다.
1. if 문처럼 when 뒤에 조건식 넣기
2. switch문처럼 case:(조건식 또는 표현식 또는 변수), case:(조건식 또는 표현식 또는 변수), .... 이렇게 쓰는 법



## 반복실행문 (각각 예시로 설명)

# 반복실행 유형1 (LOOP 문)
- 반복 실행될 실행문은 LOOP로 시작해서 EXIT로 끝난다.
-> EXIT 뒤에 'WHEN 조건' 을 달아서 반복 실행이 '끝날 조건' 을 설정한다.


# 반복실행 유형2 (WHILE 문)
- WHILE을 사용하여 반복 실행이 '실행될 조건' 을 설정한다.


# WHELE 과 EXIT WHEN 의 혼합사용
- 중간에 EXIT WHEN을 사용하여 종료 시점을 정할수도 있다.


# 반복실행 유형3 (FOR 문)
- FOR 변수명 IN [REVERSE]시작값..끝값
-> 시작값부터 끝값까지 반복실행한다. REVERSE가 쓰여진 경우, 반대방향의 숫자 진행으로 반복실행한다.


# CONTINUE 문
- 조건이 충족하면 반복실행 영역중 나머지 명령을 실행하지 않고 다음 반복으로 진행한다.


# GOTO 문 (프로그래밍 언어에서 쓰지 말라고 권장되는 문법이다...)
- 이유 : GOTO 문으로 강제로 위치를 이동시키면 이후 반복문의 흐름을 놓친다... 어느순간 제어가 불가능할 정도가 된다고 한다!
※ 인터넷 검색으로 이유 찾아봐도 좋을듯


# NULL 문
- if 문 또는 case when 등에서 해당 경우에 실행해야 할 명령이 하나도 없을때 쓰는 구문이다.







03_PLSQL_Function.sql
===============================
- 01, 02에서 사용하는 익명블럭은 잘 사용하지 않는다. 일반적으로 이름이 있는 서브 프로그램(함수) 또는 프로시저를 사용하는 것이 대부분이다.
-> 익명 블럭은 한번 사용하고 나면 없어져버리는 휘발성 블럭!
--> 함수 또는 프로시저는 컴파일을 거쳐 데이터베이스에 저장되어 재사용이 가능한 구조이다.



## 함수의 형태 (함수를 컴파일해서 두고두고 쓴다!)
- CREATE OR REPLACE FUNCTION 함수이름(매개변수1, 매개변수2 ... ) 로 만든다.
-> RETURN 데이터타입; 으로 return될 데이터타입도 써준다.
--> DECLARE 가 아니라 IS[AS] 에 변수, 상수를 선언한다!

※ 상세 내용 설명은 주석으로!

※ 예시도 있다.
- 두개의 정수를 전달해서 첫번쨰 값을 두번째 값으로 나눈 나머지를 구해서 리턴해주는 함수를 만들었다.

---> 함수의 컴파일 후에는 SQL문으로 이를 활용할 수 있다.






































































































































































































































































