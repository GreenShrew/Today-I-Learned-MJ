day 70
오늘은 주문리스트를 만들었다.

※ 에러 발생
- productList의 paging을 인클루드 하자마자 에러가 나오기 시작했다.
--> 절반 해결! 액션 태그에 잘못된 주석 들어가있었던듯
--> 근데 이젠 paging.jsp에 문제가 생겼다.
----> 해결! param. 이라고 써야할걸 paging으로 써버렸다!
------> 해결! listOrder sql문도 문제가 있었다! 또한 Dao의 getAllCount,



※ 다시 한번 봐야할것들
- 회원중에 주소를 입력하지 않았던 사람이 정보를 수정하려고 하면 에러가 날 수 있다.
 따라서 action 패키지의 EditFormAction.java를 수정하자.






------------------- 페이지 표시 인클루드 하기


 productList 아래에 있던 페이지 표시는 물품list, 주문list, qnalist 등에서 계속 쓰이게 된다.
-> 그러므로 이 부분을 인클루드로 만들고, url 태그의 value값 command만 바꾸는 식으로 바꾼다!

--> admin 폴더에 paging 폴더를 만들고, 그 안에 paging.jsp 파일을 만든다. 그리고 productList.jsp의 페이지 부분을 잘라다가 붙여넣는다.

---> 그리고 productList.jsp의 기존 페이지 코드가 있던 부분에는 액션 태그로 가능한 include를 사용한다.

----> 다만 문제가 있는데, paging.jsp의 페이지 표시 내용이 Product의 내용을 가지고 오기 떄문에 value값을 수정해야한다.

-----> 따라서 command 값만 해당하는 페이지(productList.jsp) 에서 그에 맞는 command를 액션태그로 Parameter를 보내준다. 
<jsp:param name="command" value="shop.do?command=adminProductList">

-----> 그리고 paging.jsp에서 EL문법으로 전달된 파라미터를 받는다.
 <c:url var="action" value="${param.command}" />




----------------------------- 주문 리스트 만들기

§ 사진으로 차근차근 만든다.
폴더 따로

- sub_menu의 주문리스트는 command adminOrderList가 걸려있다.

--> AdminOrderListAction 클래스 생성
 우선 주문내역을 DB에서 긁어서 orderList.jsp 로 보낼 수 있도록 만든다. (사진1)
--> order_view 뷰의 레코드를 모두 긁어서 다시 orderList.jsp로 보내는 Dao의 listOrder() 메소드를 만든다. (사진2)

---> admin 폴더에 order 폴더를 만들고, 그 안에 orderList.jsp 파일을 만든다. (사진3)
---> AdminOrderListAction 클래스에서 받은 데이터들을 웹 페이지에 표시한다.
여기서 key 값은 나중에 검색했을 때 검색창에 검색했던 내용을 남기기 위해 다시 key값으로 받도록 만든다.
---> '검색', '전체보기', '주문확인(입금확인)' 버튼에 각각 스크립트로 이동하는 onClick 속성이 있다.



-------------- orderList


----> 이제 페이징 처리 및 목록으로 돌아갈 때 페이지와 검색어를 잊게되는 문제를 해결한다. (사진4 - AdminOrderListAction, 사진5 - listOrder 메소드)

----> 그리고 orderList.jsp의 하단에 액션태그와 include를 이용하여 paging을 include한다. (사진6)

------> 또한, orderList.jsp의 go_search_order(), go_total_order() 스크립트를 작성한다.

--------> 그런데 go_search 스크립트와 go_search_order 스크립트는 경로를 제외하고 다 똑같다. 또한 go_total 스크립트와 go_total_order 스크립트도 마찬가지이다!
---------> 따라서 (사진7, 사진8) 처럼 스크립트를 실행할 때 전달인자를 넣고, 이를 매개변수로 받아서 그에 맞는 command를 넣도록 만들 수 있다!





--------------------------- 여기까지 했을때 생기는 문제점

- 상품리스트에서 '부츠' 를 검색한 뒤 주문리스트로 가면 session에 남은 key값이 주문리스트의 key에 저장되어 주문리스트에서도 '부츠'를 검색하게 된다!

--> 따라서 sub_menu를 눌렀을 때 기존에 썼던 session을 지우고 넘어가도록 만들어야 한다!
--> sub_menu.jsp에서 버튼을 누를 때 이러한 동작을 하도록 해야한다.
#1. command를 새롭게 만들어서 session을 지우는 클래스를 만든다. 다만 클래스와 명령어들이 늘어난다!
#2. 버튼을 눌렀을때 sub=y 와 같이 또다른 변수가 같이 넘어가도록 만든다!

---> #2 방법을 사용 (사진9)
---> 이렇게 만들고 AdminProductListAction 클래스로 넘어가서, 클래스에 전달된 sub 값이 null이 아니라면 key와 page의 session을 지우도록 만든다! (사진10)

---> 또한, AdminOrderListAction에도 이를 추가한다. 그리고 차후 만들 회원리스트, Q&A 리스트에도 이를 적용할 예정이다!





------------------------ 주문처리 기능 만들기

§ 사진 31

- 주문 리스트에서 미처리 체크박스에 체크하고 주문처리 버튼을 누르면 주문이 완료되도록 만든다.
--> go_order_save 스크립트를 실행한다!

※ 참고로 주문번호 oseq는 같으나, 그 안의 상세번호 odseq는 서로 다르다! 따라서 주문의 완료는 odseq를 이용하여 만들게 된다!

※ go_order_save에서 해야할 동작이 꽤 많다! 해야할 동작과 참고해야할 코드는 주석으로 적어두었다!


※ 순서
go_order_save 작성 - ActionFactory로 AdminOrderSaveAction 제작 - AdminOrderSaveAction 클래스 작성 - Dao의 orderResult 메소드 작성 - orderList.jsp 페이지로 복귀





----------------------------------------------- 이제 회원리스트를 만든다.

- 회원리스트는 주문 리스트와는 달리 
1. 회원들의 정보를 나열한 리스트가 보이는 페이지
2. 회원 이름으로 회원을 검색하는 검색 기능
정도만 만든다.
3. 그리고 페이징을 처리한다.



















