days117 배운것들


day116까지는 팀 프로젝트를 진행했다.

※ 다시 봐야할것
- main.jsp 부분을 다 못 썼다... 이거 긁어와




※ 주의사항
현재 팀 프로젝트를 진행하고 있다... 그렇기에 프로시저나 테이블, 뷰가 M17 프로젝트와는 맞지 않아 제품의 그림 등이 나오지 않거나 할 것이다. 이를 감안하고 확인하자!




 오늘은 프로젝트를 앱으로 이식시키는 방법을 배우고 이것들 프로젝트에 이식한다.
 배울때는 M17 프로젝트의 일부를 사용한다.
 그리고 배운것을 이용하여, 제작한 팀 프로젝트에 적용한다.



※ 참고로 Android Studio를 쓰기 위해서는 꽤 사양이 높은 컴퓨터가 필요하다.
 어플 개발을 본격적으로 하게 된다면 아무래도 좋은 컴퓨터가 필요할지도 모른다. 만약 사양이 낮다면 에러가 나오거나, 가상 화면이 꺼지거나, Android Studio를 삭제하고 다시 깔아야 하는 등의 문제가 생긴다.


개발중인 안드로이드 화면 확인법
---------------
 스마트폰을 이용하는 방법이 있다. 다만, 같은 라우터, 와이파이 내에서 접속해야하며, 관리자모드에서 설정을 몇개 건드려야 한다고 한다. (어렵지는 않다고 한다.)

 PC를 이용하는 방법이 있다. Android Studio라는 개발 프로그램을 이용하여 가상 화면을 띄워 이를 확인할 수 있따.



Android Studio 설치
-----------

1. 인터넷에서 android studio download 를 검색

2. Download Android Studio and SDK tools 링크 클릭

3. Download Android Studio 클릭해서 다운로드 한다. (870MB 정도 된다...)

4. 다운로드한 파일을 실행한다.(설치 단계에서 수정할 내용은 없다. 그냥 next 쭉 finish)

5. Android Studio를 실행한다. Do not import setting 선택.

6. next 쭉쭉 누르다가 license agreement 부분에서 license를 다 accept 해야한다.

7. 이것저것 설치가 되고 finish 를 누르면 본격적으로 사용할 준비가 완료된 것이다.



※ Kotlin이 요즘 대세 언어이다. 요즘 api 기능 개발이 kotlin을 사용한다.
kotlin은 java보다 배우기 쉽다고 한다...
-> Kotlin은 모바일 페이지를 개발할 때 자주 쓰이는 언어이다!
--> 솔직히 채용공고 보면 Kotlin 이야기가 많이 나온다. 배워야해!


※ 참고로 아이폰 어플을 개발하려면 iPad나 MacBook이 필요하다...
-> 맥북이 자주 쓰이는듯? 근데 비싸!(300만원 중반 이상...)


-------시작

new project - Empty Activity 선택 후 next - 이름, package 이름, 선택하고, 언어는 Kotlin을 사용한다. - 버전은 api 24 7.0 버전을 사용한다.


설정을 끝내면 새 창이 나오는데, 다운로드 되는 파일들이 많다... 전부 다운로드 되어야 사용 가능하다. (최초에만 다운로드를 한다!)




--------- 컴퓨터에서 내가 제작하는 앱 확인하기(사진1)

 우상단에 안드로이드 머리가 있는 아이콘이 있다. 이걸 누르면 우측에 창이 하나 뜨는데, 여기서 폰에 나오는 화면을 볼 수 있다...

 create device 선택해서 phone 카테고리에서 pixel 2 를 선택하고 next 한다.
-> 탑재될 버전을 뭘로 할건가를 선택한다. 여기서는 api 24 nougat 버전을 선택하고, 옆에 있는 download 버튼을 눌러서 해당 버전을 다운로드 한다.

--> 설치가 다 되면 finish 버튼이 활성화된다.

---> 설치를 끝내면 device manager 창이 바뀐다. 우상단의 녹색 화살표 버튼으로 가상 화면을 실행할 수 있다! (첫 실행은 오래 걸린다...)

※ 기본적으로 My Application이라는 어플이 설치되어있다.





이클립스에서 만든 프로젝트 연결? 하기
------------
이클립스에서 프로젝트를 실행한다.
-> 그리고 andriod studio로 돌아와서 가상 화면의 크롬에 접속한다.
--> cmd에서 ipconfig로 주소를 확인하고, 그 뒤에 localhost 번호를 쓴다.
(cmd에서 IPv4 주소를 찾고, 192.168.0.58:8070 이렇게 주소에 쓴다)
---> 그럼 제작한 프로젝트를 웹에서 보듯 가상 화면으로 볼 수 있다. 근데 앱에서 보기는 불편해진다...





웹, 앱 페이지 구분하기
--------------------
이를 위해서는 JSP 파일을 따로 만들어주어야 한다.

-> 우선 첫 페이지로 이동하는 Request를 찾아준다.(ProductController의 "/" 이다.)

--> 기존의 / 를 /webmain으로 바꾼다. 그리고 새로운 Request로 "/"를 만들어준다. return은 index로 가도록 설정. 
 즉, 처음 프로젝트가 실행되면 index.jsp로 가서 거기서 웹, 앱을 가를것이다.

---> view 폴더 아래에 index.jsp 파일을 생성한다. 여기에서는 앱 휴대기기에서 접속시 request를 mobilemain으로, 웹 접속시 webmain으로 보내도록 한다.

----> 이렇게 하고 이클립스에서 실행시 /webmain을 통해 페이지가 실행된다! 그리고 Android Studio에서 실행시 /mobilemain을 통해 페이지가 실행된다!

-----> 모바일로 실행시에는 새로운 JSP로 이동하도록 만들어야 한다.......

------> MProductController 클래스를 제작! 서비스나 Dao는 기존의 것을 쓴다! 따라서 컨트롤러만 새로 만들고 Dao는 기존걸로...

-------> @RequestMapping("/mobilemain") 을 만들때도 기존의 @RequestMapping("/webmain")를 그대로 복사해와서 쓸 수 있다. 다만 최종 경로를 모바일용 jsp로 보내도록 만들기만 하면 된다.





앱에서 보기 편한 화면 만들기 (사진 2)
※ 여기에 header, footer, css 따로 넣고 할 것이다!
----------------------
@RequestMapping("/mobilemain") 에서는 mobile 폴더에 모바일용 jsp인 main.jsp를 만든다.

-> view 폴더 아래에 mobile 폴더 제작 후 main.jsp 제작

--> Android Studio를 이용해서 페이지에 접속하면 (사진 2) 가 나온다.

---> mobile 폴더 안에 include 폴더를 만든다. 여기에 모바일용 header, footer 제작할 예정

----> include에 header.jsp와 footer.jsp 제작 (footer는 기존의 것과 똑같다.)
 header를 만들 때 request를 기존의 request로 보내면 안 된다! mcart와 같이 새로운 요청을 해야한다!



메인 페이지
--------------------------
main.jsp를 제작한다.

-> static 폴더 안에 mobile.css 를 만들어준다.








