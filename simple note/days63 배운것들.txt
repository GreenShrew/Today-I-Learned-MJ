day 63

오늘은 WEB10 프로젝트에 파일 업로드 기능을 추가했다.


※ 궁금한거!

- sql에서 cascade은 무엇까지 지우는걸까?
--> 무엇을 삭제하고, 무엇까지 삭제하는지 sql 명령들을 찾아보자.









※ 확인할거

- WEB10에서 게시글 등록 페이지 가운데 정렬 안 되어있고, 등록 후 메인 페이지로 돌아가지 않는다.
--> 다만 글의 등록과 이미지는 잘 추가된다.
----> 해결! 메인 페이지로 돌아가는건 순전히 렉 때문이었다!
------> 정렬 문제는 어떻게 해결하지?



- 게시글의 수정시 사진이 수정되지 않는다!
--> dao의 updateBoard 메소드의 sql 문제인 것 같다.
--> java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended










※ WEB 10의 프로젝트에도 파일을 업로드를 추가


------------ 업로드 기능 만들 준비

우선 WEB11의 lib 폴더 안의 cos.jar 파일을 복사해온다.
--> 파일을 업로드 하기 위해 필요한 요소

----> 그리고 webapp 폴더에 images 폴더를 생성한다.

------> board 테이블에 이미지파일의 제목을 저장할 컬럼을 추가한다. 만들면 전부 null로 채워진다.

--------> dto 파일에서 위에 만든 컬럼에 대한 변수를 getter setter 생성한다.






------------ 게시물에 사진 칸 만들기

- 우선 게시물을 누르면 사진이 나오도록 만든다.
--> 다만 아직 업로드된 사진이 없는 게시글은 noname.jpg 파일이 웹에 출력되도록 한다.
----> images 폴더 안에 noname.jpg 파일을 넣는다

------> boardView.jpg에서 내용이 적히는 칸 옆에 이미지를 넣을 자리를 만든다.





------------ 게시글 쓸때 이미지 업로드 기능 넣기

- 우선 boardWriteForm.jsp 에서 form 태그 안에 enctype="multipart/form-data" 를 꼭 넣어주자!

--> 내용이 들어가는 tr태그 아래 파일을 업로드 하는 버튼을 넣을 공간을 만드는 tr 태그를 만든다.

----> 실제 이미지 업로드를 하는 내용은 Action 패키지 폴더의 BoardWriteAction을 통해 작동하도록 만든다.

------> 파일이 저장될 서버 내의 경로(이미지의 실제 경로)를 얻는 동작이 필요하다.

--------> request로 처리하던걸 MultipartRequest로 만든 객체 multi로 처리한다.




----- BoardDao의 메소드들 수정

-(필수) BoardDao의 insertBoard 메소드를 수정한다.
--> sql문에 ?를 하나 더 추가하고 필드명을 늘린다. 추가한 자리에는 getImgfilename을 넣을 수 있도록 한다.


-(필수) getBoard로 데이터를 가져올때도 이미지파일의 제목을 가져오도록 해야하기 때문에 이 또한 수정한다.


- selectBoard에도 getBoard와 같이 데이터를 가져올 수 있도록 수정한다.
 다만 굳이 없어도 될 수 있다.


------- boardUpdate 수정

※ form 태그에 enctype="multipart/form-data" 필수로 추가!

- 게시글을 수정할때도 사진을 업로드할 수 있도록 만든다.
--> 내용 아래 이미지 파일을 업로드 할 수 있는 공간을 만든다.

----> BoardViewAction 클래스 수정



WEB10은 여기서 종료

===========================



새로운 Dynamic Web Project를 생성한다.
이름은 WEB12_ShoppingMall.
--> 지금까지 배웠던 내용을 총 망라해서 만들 것이다.
----> 어것저것 하면서 어느 부분에서 배웠던 내용인지 확인하자!

※ 쇼핑몰 페이지는 대략 이러한 구성과 DB를 가지고 있다는것을 파악하자.




※ 이번에는 header.jsp, footer.jsp를 따로 만들어서 include를 사용하서 페이지를 만들것이다.
footer와 include에 대해 다시 한번 보자!



- 쇼핑몰을 만들 것이다. 다만, 단일 상품 하나(신발)만 파는 쇼핑몰이다.
 신발의 종류(부츠, 힐, 스니커즈 등등의 카테고리 대여섯개를 나눠서 만들 예정)

--> 필요한 reference, liberary 파일 (jar 파일)을 lib 폴더로 복사해온다.

----> 프로젝트의 properties - project facets로 가서 자바 버전과 톰캣 서버를 설정한다.




------> sql.sql 로 DB를 구축한다. 근데 이번에는 이것저것 많기 때문에 간단하지 않다! 우선 테이블만 여러개를 만들어야 한다!
확실하게 만들고 넘어가야한다!!!!!!!

#1. member 테이블 : 상품을 구매하기 위해서 회원으로 가입한 구매자들 테이블.
#2. product 테이블 : 판매할 상품 테이블.
#3. worker : 쇼핑몰 관리자 테이블.
#4. cart : 장바구니 테이블.
#5-1. orders : 주문 테이블.




※ 테이블을 만들고 조회까지 한번 해주자! 간혹 테이블을 안 만들고 진행할 수도 있으니깐!






















