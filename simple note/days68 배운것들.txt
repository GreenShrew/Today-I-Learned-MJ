day 68


※ 볼것

findIdForm.jsp 하단 다 못씀
--> 다 썼나?

findIdconfirmNumber
--> 다 쓴거 맞나?


resetPw.jsp 다 못썼다!



※ 에러

- Best Item 부분이 몇개 안 나온다.
ProductDao에서 getBestList() 메소드 문제가 있는듯?
결과 집합을 모두 소모했음이라고 에러가 나온다.
--> 해결! 쿠키 삭제하니 이게 왜 또 되는걸까...



--------------------------------- 아이디 비밀번호 찾기

§ 사진 22

- login.jsp에 보면 아이디 비번착지가 onclick find_account()로 스크립트로 보내게 되어있다.

--> 또한, sub_menu.html에도 onclick으로 스크립트에 연결한다.

----> 팝업창이 열리게 만들어 여기서 해결할 생각임.
 find_account() 스크립트에서는 command findAccount 로 FindAccountAction 클래스로 보낸다.

------> FindAccountAction 클래스 제작
 역할은 member/findAccount.jsp 로 forwarding하는 것 뿐이다.


--------> findAccount.jsp 사진 22
 팝업창을 띄우고 아이디찾기, 비밀번호 찾기 버튼을 누르면 각각 해당 기능을 가진 페이지를 팝업창에 표시한다.



-> FindIdFormAction 
 역할은 member/findIdForm.jsp으로 이동시켜주는 것 뿐이다.


--> findIdForm 사진
 팝업창에 이름, 전화번호 입력란과 전송 버튼을 만든다. 전송버튼을 누를시 command findIdStep1 FindIdStep1Action 으로 보낸다.


----> findIdSteq1Action 클래스
 역할은 보내진 이름과 전화번호를 이용해 정보를 받고, 받은 결과에 따라 

- 이름과 전화번호를 전달받아서 저장 ( getMemberByname 메소드 이용)
-- mvo가 null이라던가 mvo.getphone이 사용자가 작성한 phone값과 다르다면 findIdForm.jsp로 보낸다.
-- 같다면, 저장해둔 mvo를 request에 담아 findIdconfirmNumber.jsp로 보낸다. 


------> findIdconfirmNumber.jsp 제작
 전화번호로 날아가는 인증번호를 입력하는 Form이다. (여기서는 인증번호 날려보내는건 생략한다.)



--------> command findIdStep2로 FindIdStep2Action 클래스로 보낸다.
 역할은 findIdconfirmNumber.jsp 에서 전달된 id, name, phone을 Dto에 저장하고, 이를 member/viewId.jsp 로 전달한다.
 다만, 전달된 인증번호가 틀리다면 위의 저장 내용을 가지고 다시 findIdconfirmNumber.jsp 로 돌아가게 만든다.


-------------> viewId.jsp 제작
 이름과 전화번호, 조회한 id를 팝업창에 보여준다
 그리고 move_login 스크립트를 이용해 command loginForm으로 보내고 팝업창을 닫도록 만든다.
 비밀번호찾기를 누르면 command findPwForm FindPwFormAction 으로 보낸다.


------ 이젠 비밀번호를 찾는다.
§ 사진 23

순서

 FindPwdFormAction -> findPwForm.jsp -> FindPwStep1Action

findPwForm.jsp 에서는 아이디 이름 전화번호 작성

FindPwStep1Action 클래스에서는 전달받은 id, name, phone을 저장하고, id를 이용해 getMember 메소드로 회원정보를 불러온다.
 그리고 불러온 정보와 findPwForm.jsp 에서 가져온 정보와 비교하고 일치하면 findPwconfirmNumber.jsp로 보낸다.



--> findPwconfirmNumber.jsp 제작
 - 


----> FindPwStep2Action 클래스 제작
역할은 인증번호가 맞다면 비밀번호를 알려주는 페이지로 이동하고, 아니라면 다시 되돌아간다.

findPwconfirmNumber.jsp 에서 전송된 인증번호, id, pwd, phone을 저장
인증번호가 0000(이건 임의로 정한 숫자)가 맞다면 비밀번호를 바꿀 수 있는 resetPw.jsp 페이지로 보낸다.
--> id, name, phone을 request에 담아 전송한다.



--------> resetPw.jsp 제작
비밀번호를 재설정하는 페이지이다.

command resetPw로 ResetPwAction 클래스로 이동한다.


----------> ResetPwAction 클래스 제작
역할은 아이디와 패스워드를 전달받아서 패스워드를 수정하고(resetPw 메소드 Dao에 제작) 패스워드 리셋 완료 페이지로 이동한다.
resetPwComplete.jsp로 이동

--------------> resetPwComplete.jsp






===================================

이제부터는 관리자 페이지를 만들것이다.

관리자로 접속하는 방법은 여러가지가 있다.

#1. 관리자 아이디 비번을 설정한다.
#2. 따로 url을 만들어서 관리가 필요할 때 접속한다.
#3. 관리자 로그인 버튼을 만든다.


사실 #1번이 가장 좋은 방법이긴 하다. 이 방법은 유저들이 관리자가 있는지 없는지 알 수 없기 때문이다.


※ 관리자 관련 action 클래스들은 com.ezenac.controller.admin.action 패키지에 저장한다.
 또한, webapp 폴더 아래에 admin 폴더를 생성한다.

※ 관리자의 정보를 담을 Dto와 관리자 테이블에 접근할 Dao를 만든다.




※ 이 방법은 #2의 방법이다.
- AdminAction 클래스 생성
command admin을 통해 서블릿으로 접근할 수 있는 클래스로 만든다.
--> 역할은 admin이 로그인할 수 있는 로그인 페이지(adminLogin.jsp)로 이동시킨다.

§ 사진 24
--> adminLogin.jsp 생성
 admin 로그인창을 만든다.




------------------------------ 로그인 기능 만들기

- 아이디 비밀번호를 넣고 로그인 버튼을 누르면
command adminLogin으로 AdminLoginAction 클래스로 보낸다.

역할은 로그인 성공시 세션에 ID만 저장하고 페이지를 넘긴다.
















