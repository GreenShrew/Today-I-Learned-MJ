day 65



※ 보기 전에...

수많은 ~~Action 클래스와 Dao 클래스에 수많은 메소드가 생길 예정이다.
메모장은 흐름을 파악하는 용도라고 생각하고 자세한건 주석을 확인해가며 공부하자


※ 에러
- 약관동의에서 next가 먹통이다.
--> 절반 해결! 동의안함일때 경고창은 뜬다!
----> 해결! 오탈자 문제!






------------------------------------------------------------

§ WEB10 11 에서는 index.jsp로 시작해서 서블릿으로 보내고 몇가지 처리를 한 다음에 로그인 혹은 메인 화면으로 갔다.

1단계 : index 스타트
2단계 : 서블릿
3단계 : 첫 페이지

그런데 WEB12에서는 3단계 부분에 index.jsp라는 이름을 붙였다.
페이지를 시작하는 파일의 이름은 'index'로 정하는것이 관례이다. 이 관례를 따르고어 html 파일로 1단계 페이지를 만들었다.
--> 메타태그를 이용하여 이를 가능하게 만들었다.




----------------------------------------------------------

§ 어제에 이어 로그인 기능을 만든다.

 우선 한 회원의 정보를 담을 수 있는 변수를 가지는 객체를 만들어야 한다. 이를 위해 Dto를 만들어야한다.
--> dto 패키지에 MemberVO 클래스 생성 후 getter setter

 또한 멤버 DB에 접근하여 정보를 조회 수정 삭제 기능을 해줄 Dao 클래스가 필요하다.
--> dao 패키지에 MemberDao 클래스를 생성 후 싱글톤으로 만든다.



이제 LoginAction을 작성한다.
--> 기능은 DB에서 정보를 받아서 로그인 시킬지 여부를 결정

# 사진 07




§ Logout 기능을 만든다. LogoutAction 제작
--> 기능은 현재 있는 세션을 받아서 이를 지우는 동작.
----> 이전에는 invalidate() 로 다 지워버렸다면, 이번에는 현재 로그인된 유저만 지우도록 만든다.
----> session.removeAttribute("loginUser");
----> 내가 session 이름을 loginUser라고 해놨다.




§ 약관동의 기능을 만든다. 사진 08
- 순서는 이렇다.
1. 회원가입 약관에 동의 (command contract)
2. 약관에 동의하면 회원가입 Form에서 회원가입을 하도록 한다.


--> ContractAction 클래스 제작
 역할은 회원가입 약관 동의 페이지(contract.jsp)로 보내는 것

----> member 폴더에 contract.jsp 제작
----> 회원가입 약관 Form을 제작
----> 동의안함 버튼을 누르고 Next 버튼을 누르면 경고창이 뜨게 만든다. onClick="go_next();"
------> member.js에 function go_next() 제작



§ 회원가입 기능을 만든다. # 사진 09

--> JoinFormAction 클래스 제작
 역할은 member폴더의 join.jsp로 보내는 역할

--> join.jsp 제작 (여기 쓸 내용이 많다. 회원가입 Form)

----> 회원가입이 가능한 아이디인지 중복체크하는 팝업창을 오픈한다.
----> 이를 위한 기능을 수행하는 IdCheckFormAction 클래스를 만들어 사용한다.
----> DB를 조회해서 이미 회원가입된 아이디면 1을, null값이라면 -1을 'result'라는 이름으로 request에 담아 보낸다.
----> 전달되었던 id 역시 request로 다시 담아 보낸다.
----> idcheck.jsp로 이동시킨다.

------> idcheck.jsp 제작
------> idcheck는 팝업창이다. header footer가 필요 없기 때문에 태그를 다 살려놔야한다.
------> 여기서의 역할은 건너온 result의 값에 따라 id를 사용 가능 여부를 웹페이지에 나타낸다. 또한, 아이디를 다시 검색할 수 있는 기능을 제공한다.

# 사진10

--------> 팝업창 안에서 다시 검색하게 만들고자 idok() 스크립트를 만들었다.



------------ 회원가입 form에서 우편번호 찾는 기능

§ 사진 11, 11.1, 11.2

- member.js 파일에 스크립트를 만들것이다. post_zip()
--> 해당 스크립트에서는 팝업창을 띄우고 command findZipNum를 통해 FindZipNumAction 클래스로 보낸다.



----> FindZipNumAction 클래스 제작.
역할은 findZipNum에서 넘어온 데이터를 바탕으로 DB에서 주소를 검색하고 다시 findZipNum.jsp로 보낸다.
처음 해당 클래스로 넘어오면 
----> 검색한 내용을 담을 address용 Dto와 Dao 파일이 필요하다.
----> dto 패키지에 AddressVO 클래스,



------> findZipNum.jsp 클래스 생성
역할은 FindZipNumAction 에서 데이터를 받고, 동 이름을 통해 주소를 검색할 수 있도록 form을 만드는 역할.



--------> 팝업창에서 주소를 검색해 주소를 선택하면 팝업창은 닫히고 다시 회원가입 창으로 돌아오는데, 선택한 주소가 페이지로 넘어오도록 만든다.




---------------------------------------- 회원가입 시키는 기능

 회원가입 페이지를 채우고 회원가입 버튼을 누르면 회원가입이 되도록 만든다.
--> 그 전에 아이디 입력이나 비밀번호 입력 등, 체크할것이 많다.
--> member.js에 스크립트로 go_save() 함수 제작.
----> 만약 go_save() 에서 모든 확인이 완료되었다면, 스크립트에서 shop.do로 submit 시키는 동작을 한다. 이때 command 값은 join.jsp의 form 태그 안에 join으로 되어있다.

------> JoinAction으로 넘어간다.
 역할은 회원가입 Form에서 보내진 정보를 dto에 담아서 MemberDao의 DB에 레코드를 추가하는 메소드(insertMember)로 보낸다.

※ insert를 할떄는 sendRedirect를 사용한다고 하는데, 왜? 이전에 했던 insert 봐봐

--------> 회원가입이 완료되면 로그인 페이지로 넘어가도록 한다.







------------------------------------- 회원 정보 수정

§ 사진 13

- header에서 command editForm을 통해 EditFormAction으로 이동

--> EditFormAction 클래스 생성
 역할은 updateForm.jsp로 이동시키는것인데, 추가로 회원의 주소를 받아와서 이를 앞주소 뒷주소로 나누는 작업도 진행한다.
--> 현재 로그인한 유저의 모든 정보를 가져온다.














