1. 배열
- 장점 : 다수개의 요소를 저장할 수 있음, 번호(첨자)에 의해 손쉬운 접근 방법을 제공
- 단점 : 크기가 고정, 데이터의 중간 삽입과 중간 삭제에 비효율적


2. 리스트(List)
- 장점 : 크기의 제약없이 데이터를 저장할 수 있음, 데이터의 삽입과 삭제에 최적화
- 단점 : 검색에 취약하다.
- 단점 : 데이터 저장시 불필요한 메모리 사용


3. Set 타입의 저장방법을 구현하고 있는 클래스들
 Set 타입 : 데이터를 저장할 때, 중복을 허용하지 않는 방법 : 검색을 위해서 사용, 중복된 값을 제거하기 위해서 사용
 HashSet(사용빈도 : 중), TreeSet 이 있다.


4. Map 타입의 저장 방법을 구현하고 있는 클래스들
 Map 타입 : 데이터를 Key와 Value의 형태로 저장하는 방법
 (검색을 위해서 사용, Key의 값은 중복을 허용하지 않음, Value의 값은 중복을 허용)
 Hashtable, HashMap(가장 많이 사용)이 있다.


5. Vector, ArrayList 클래스
 - 두 개의 클래스는 동일한 기능을 제공한다.
 - 쓰레드 동기화의 지원 여부 크기의 제약없이 데이터를 저장(동적으로 크기를 확장한다)
 - 배열과 같이 인덱스를 기반으로 데이터를 접근
 - 데이터의 중복을 허용
 - 데이터의 입력 순서를 유지





