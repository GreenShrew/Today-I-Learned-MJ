days11 배운것들


Method 연습을 많이 했다
워낙 앞으로 많이 쓸 예정이니 제대로 숙지하자.
+ Class 수업 시작


Method06

- 간단한 문제 풀이 1
int [] a = {5,4,3,6,7,9,8,0,1,2};
sum(a);

sum(a);이 정상 실행되어 배열 내의 값의 합계를 출력하도록 sum 함수를 제작해보자.


Method07

- 리턴값이 존재하는 메소드의 선언
return
void = 리턴값이 없다는 의미.

- 메서드 사용에 따른 메서드 형태

- 메서드 주의점

- 메소드 줄일 수 있다!
method08에서 원의 넓이 부분에 return 한줄로 줄인거 참고.


Method08

- 간단한 문제 풀이 2

main의 내용을 보고(main 부분을 코드블럭에 삽입) 원의 넓이, 원의 둘레, 그리고 이를 출력하는 3개의 메소드를 만들어보자.



Method09

- 간단한 문제 풀이 3
main의 내용을 보고(main 부분을 코드블럭에 삽입) 입력받은 년도를 전달인자로 전달하여 윤년이면 true, 평년이면 false를 리턴하고, 이를 받아 윤년인지 평년인지 출력하는 메소드를 만들어보자.


Method10

- 간단한 문제 풀이 4
main의 내용을 보고(main 부분을 코드블럭에 삽입) 밑변과 높이를 입력받아서 삼각형의 넓이를 계산하여 출력하는 메소드를 만들어보자.

아랫부분에 방법 써있는거 음..


Method11

- 간단한 문제 풀이 5

main의 내용을 보고(main 부분을 코드블럭에 삽입) 국어, 영어, 수학 점수를 입력받고, 총점과 평균을 계산하여 이를 이용해 총점, 평균, 학점을 출력하는 메소드를 만들어보자.


Method12

- 간단한 문제 풀이 6

main의 내용을 보고(main 부분을 코드블럭에 삽입) 배열의 합계, 배열의 평균을 계산하여 리턴하는 메소드를 만들고, 배열의 요소/합계/평균을 출력하는 메소드를 만들어보자.


Method13

- Method Overloading(메소드 오버로딩)
Q. 왜 이걸 쓰는가?
A. 같은 기능을 하는 메소드를 묶어놓으면 후에 사용하기 편해진다. 또한, 이들을 한데 묶어 직관성인 이름을 사용할 수 있기 때문이다.


Method14

- 전달인수의 갯수가 일정치 않아 오버로딩으로는 해결할 수 없을 때
매개변수에 int...a와 같이 쓴다.


Method15

- 전달인자에 다른 자료형이 섞이면?


Method16

- 간단한 문제 풀이 7

main의 내용을 보고(main 부분을 코드블럭에 삽입) 전달된 문자열에 따라 입력된 숫자들의 평균 또는 합계를 출력하는 cals 메소드를 만들어보자.


Method17 - 에러난다 카페 비교대조 ㄱㄱ 해야함
에러 해결함 - j를 써야할 곳에 i를 썼다...

- 간단한 문제 풀이 8

main의 내용을 보고(main 부분을 코드블럭에 삽입) 학생수와 괌고수를 입력받고, 점수를 입력받아 총점 및 평균을 포함한 성적표를 출력하는 메소드를 만들어보자.


Class01

Class를 모르면 Java를 모르는 것.
- class란?
class를 만드는 방법
class는 왜 만들어? : 일단 쓰려고

클래스 변수 선언 방법
객체, 뉴인스턴스

System.out.println 는 '객체.객체.메서드' 이다!


class02

- 간단한 문제 풀이 9

위 코드블럭을 토대로 성적표를 출력하라. (범위 적어놓음)
